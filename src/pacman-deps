#!/bin/sh

EXEC_NAME="$(basename "$0")"

read -r -d '' USAGE <<EOF
EOF

function usage() {
    cat <<-EOF
		usage: $(basename "$0") <pkg> [...]
		For each given package, list all packages that depend on it.
		Use '*' to dump a listing for all packages installed as dependencies.

		options:
		    -d, --debug     enable debug logging
		    -s, --source    don't run; just define functions
		    -h, --help      show this usage information
	EOF
    exit 0
}

DEBUG='false'
function debug() {
    [ "$DEBUG" != 'true' ] && return
    local fmt="$1"; shift
    printf "[dbg] $fmt\n" "$@"
}

function expect() {
    local -a rcs=( ${PIPESTATUS[*]} )
    for i in ${!rcs[*]}; do
        local rc=${rcs[$i]}
        if [ $rc -ne 0 ]; then
            local fmt="$1"; shift
            printf "${EXEC_NAME}: ${fmt}\n" "$@" >&2
            printf "${EXEC_NAME}: (command %d exited with status %d)\n" $((i+1)) $rc >&2
            exit 1
        fi
    done
}

args=()
sourced='false'
function parse_argv() {
    while [ $# -gt 0 ]; do
        case "$1" in
            -h|--help) usage ;;
            -s|--source) sourced='true'; return ;;
            -d|--debug) DEBUG='true' ;;
            -*) printf "${EXEC_NAME}: unrecognized option: %q\n" "$1" >&2; exit 1 ;;
            *) args+=( "$1" ) ;;
        esac
        shift
    done
    [ ${#args[*]} -eq 0 ] && usage

    if [ "${args[0]}" = '*' ]; then
        args=( $(pacman -Qd | cut -d' ' -f1) )
        expect 'error getting full list of packages installed as dependencies'
        debug "'*' -> %d packages installed as dependencies" ${#pkgs[*]}
    fi
}

function dump_inv_deps() {
    local -a pkgs=( $(pacman -Sii "$1" | sed -n 's/^Required By *: //p') )
    expect 'error getting packages dependent on %q' "$1"
    echo "$1"
    [ "${pkgs[*]}" = 'None' ] && return
    for pkg in "${pkgs[@]}"; do
        echo "    ${pkg}"
    done
}

function main() {
    parse_argv "$@"
    [ "$sourced" = 'true' ] && return
    debug 'given %d packages' ${#args[*]}
    for arg in "${args[@]}"; do
        dump_inv_deps "$arg"
        echo
    done
}

main "$@"
