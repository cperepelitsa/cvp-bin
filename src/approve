#!/bin/bash

# Runs a program for every file, then prompts whether to move it, delete it, or skip.

# usage
if [ $# -eq 0 -o "$1" = "-h" ]; then
    cat <<-EOF
		usage: $(basename "$0") [-t dir] [-d] prog [opts ...]
		
		options:
		    prog        run program <prog> on each file
		    opts        command-line options for <prog>
		    -t dir      move files to directory <dir> (default: .)
		    -d          dry run
	EOF
    exit 0
fi

# option parsing
prog=
declare -a prog_opts
dest=.
dry=
while [ $# -gt 0 ]; do
    case "$1" in
        "-t") dest=$2; shift ;;
        "-d") dry="true" ;;
        *)
            if [ -z "${prog}" ]; then
                prog="$1"
            else
                prog_opts+=("$1")
            fi
            ;;
    esac
    shift
done

if [ -z "${prog}" ]; then
    echo "error: no program specified" >&2
    exit 1
fi

final_rc=0
at_least_one_file=0

# main
while read -r filename; do
    if [ "${filename}" = "." -o "${filename}" = ".." ]; then
        continue
    elif [ ! -f "${filename}" ]; then
        echo "error: ${filename}: not a file" >&2
        final_rc=1
        continue
    fi
    at_least_one_file=1

    echo
    echo "file: ${filename}"
    echo "+ ${prog} ${prog_opts[@]} ${filename}"

    if [ "${dry}" = "true" ]; then
        rc=0
    else
        "${prog}" "${prog_opts[@]}" "${filename}"
        rc=$?
    fi

    if [ "${rc}" -ne 0 ]; then
        echo "error: ${prog} exited with status ${rc}" >&2
        final_rc=1
        while true; do
            echo -n "(c)ontinue (s)top> "
            read r
            case "${r}" in
                c*) break ;;
                s*) exit 1 ;;
                *) echo "unrecognized command" >&2
            esac
        done
        continue
    fi

    while true; do
        echo -n "(d)elete (m)ove (r)epeat (s)kip> "
        read r
        case "${r}" in

            d*)
                echo "+ rm ${filename}"
                if [ "${dry}" = "true" ]; then
                    break
                fi
                rm "${filename}"
                if [ $? -ne 0 ]; then
                    echo "failed to remove ${filename}" >&2
                    while true; do
                        echo -n "(c)ontinue (s)top> "
                        read r
                        case "${r}" in
                            c*) final_rc=1; break ;;
                            s*) exit 1 ;;
                            *) echo "unrecognized command" >&2 ;;
                        esac
                    done
                fi
                ;;

            m*)
                while true; do
                    echo -n "rename> "
                    read -r name
                    if [ -z "${name}" ]; then
                        name="$(basename "${filename}")"
                    fi

                    if [ -e "${dest}/${name}" ]; then
                        echo "${dest}/${name}: file already exists" >&2
                        continue
                    fi

                    echo "+ mv '${filename}' '${dest}/${name}'"
                    if [ "${dry}" = "true" ]; then
                        break
                    fi

                    mv "${filename}" "${dest}/${name}"
                    if [ $? -ne 0 ]; then
                        echo "move failed" >&2
                        while true; do
                            echo -n "(r)ename (c)ontinue (s)top> "
                            read r
                            case "${r}" in
                                r*) rename="true"; break ;;
                                c*) rename="false"; final_rc=1; break ;;
                                s*) exit 1 ;;
                                *) echo "unrecognized command" >&2 ;;
                            esac
                        done
                    fi
                    if [ "${rename}" != "true" ]; then break; fi
                done
                ;;

            r*) 
                echo "+ ${prog} ${prog_opts[@]} ${filename}"
                if [ "${dry}" = "true" ]; then
                    rc=0
                else
                    "${prog}" "${prog_opts[@]}" "${filename}"
                    rc=$?
                fi

                if [ "${rc}" -ne 0 ]; then
                    final_rc=1
                    echo "error: ${prog} exited with status ${rc}" >&2
                    while true; do
                        echo -n "(c)ontinue (s)top> "
                        read r
                        case "${r}" in
                            c*) break ;;
                            s*) exit 1 ;;
                            *) echo "unrecognized command" >&2
                        esac
                    done
                fi
                ;;

            s*)
                rc=0
                break
                ;;

            *)
                echo "unrecognized command" >&2
                ;;

        esac
    done
done
